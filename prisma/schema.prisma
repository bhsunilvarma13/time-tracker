// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_PRISMA_URL") // uses connection pooling
}

model Tenant {
  id         String     @id @default(dbgenerated("concat('tnt_', replace(cast(gen_random_uuid() as text), '-', ''))"))
  name       String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  users      User[]
  activities Activity[]
  clients    Client[]
  projects   Project[]
}

model User {
  id         String     @id @default(dbgenerated("concat('usr_', replace(cast(gen_random_uuid() as text), '-', ''))"))
  name       String?
  email      String     @unique
  avatar     String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  tenantId   String
  tenant     Tenant     @relation(fields: [tenantId], references: [id])
  activities Activity[]
}

model Activity {
  id        String    @id @default(dbgenerated("concat('act_', replace(cast(gen_random_uuid() as text), '-', ''))"))
  name      String?
  startAt   DateTime
  endAt     DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  tenantId  String
  tenant    Tenant    @relation(fields: [tenantId], references: [id])
  userId    String
  user      User      @relation(fields: [userId], references: [id])
  clientId  String?
  client    Client?   @relation(fields: [clientId], references: [id])
  projectId String?
  project   Project?  @relation(fields: [projectId], references: [id])
}

model Client {
  id         String     @id @default(dbgenerated("concat('clt_', replace(cast(gen_random_uuid() as text), '-', ''))"))
  name       String
  color      String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  tenant     Tenant     @relation(fields: [tenantId], references: [id])
  tenantId   String
  activities Activity[]
  projects   Project[]
}

model Project {
  id         String     @id @default(dbgenerated("concat('prj_', replace(cast(gen_random_uuid() as text), '-', ''))"))
  name       String
  color      String?
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
  tenant     Tenant     @relation(fields: [tenantId], references: [id])
  tenantId   String
  client     Client?    @relation(fields: [clientId], references: [id])
  clientId   String?
  activities Activity[]
}
